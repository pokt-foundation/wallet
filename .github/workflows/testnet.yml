name: Testnet Deployment

on:
  push:
    branches: [ staging ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.15.0 ]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: NPM install
      run: npm install
      env:
        REACT_APP_CLIENT_PASSPHRASE: ${{ secrets.WALLET_TESTNET_CLIENT_PASSPHRASE }}
        REACT_APP CLIENT_PUBLIC_KEY: ${{ secrets.WALLET_TESTNET_CLIENT_PUBLIC_KEY }}
        REACT_APP CLIENT_PRIVATE_KEY: ${{ secrets.WALLET_TESTNET_CLIENT_PRIVATE_KEY }}
        REACT_APP WALLET_APP_PUBLIC_KEY: ${{ secrets.WALLET_TESTNET_APP_PUBLIC_KEY }}
        REACT_APP WALLET_APP_AAT_SIGNATURE: ${{ secrets.WALLET_TESTNET_APP_AAT_SIGNATURE }}
        REACT_APP POKT_USD_VALUE: ${{ secrets.POKT_USD_MARKET_PRICE }}
        REACT_APP SECURE_LS_ENCRYPTION_SECRET: ${{ secrets.SECURE_LS_ENCRYPTION_SECRET }}
        REACT_APP SECURE_LS_ENCODING_TYPE: "aes"
        REACT_APP SECURE_LS_IS_COMPRESSION: true
        REACT_APP DISPATCHERS: "https://node1.testnet.pokt.network,https://node2.testnet.pokt.network,https://node3.testnet.pokt.network,https://node4.testnet.pokt.network,https://node5.testnet.pokt.network"
        REACT_APP HTTP_PROVIDER: "https://node1.testnet.pokt.network:443"
        REACT_APP AAT_VERSION: "0.0.1"
        REACT_APP MAX_DISPATCHERS: 0
        REACT_APP PROVIDER_TYPE: "http"
        REACT_APP BLOCK_EXPLORER_BASE_URL: "https://explorer.testnet.pokt.network"
        REACT_APP DASHBOARD_BASE_URL: "https://dashboard.testnet.pokt.network"
        REACT_APP BUY_POKT_BASE_URL: "https://pokt.network/pokt-sale/"
        REACT_APP CHAIN: "0002"
        REACT_APP CHAIN_ID: "testnet"
        REACT_APP BLOCK_TIME: "900000"
        REACT_APP MAX_TRANSACTION_LIST_COUNT: "100"
        REACT_APP TX_FEE: "10000"
        REACT_APP SESSION_LENGTH: "15"
    - name: Production build
      run: npm run build
    - name: Deploy to S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_TESTNET_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "build"
    - name: Clear CloudFront Cache
      uses: awact/cloudfront-action@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        DISTRIBUTION_ID: ${{ secrets.AWS_TESTNET_DISTRIBUTION_ID }}

